# -*- coding: utf-8 -*-
"""Statistics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BXcehb0NaaOWYuLlcEjVAaja6C8xoKmI

# Cargando las bases
"""

import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

diccionario_exportaciones = pd.read_excel("/content/drive/MyDrive/Data Science/Raw data/excel_diccionario_datos_senae_exportacion_simplificado.xlsx")
diccionario_exportaciones

data_export = pd.read_csv("/content/drive/MyDrive/Data Science/Raw data/senae_exportacion_simplificado_enero_noviembre_2023.csv",delimiter='|')
data_export

data_import = pd.read_csv("/content/drive/MyDrive/Data Science/Raw data/senae_importacion_simplificado_enero_diciembre_2023.csv",delimiter='|')
data_import

diccionario_importaciones  = pd.read_excel("/content/drive/MyDrive/Data Science/Raw data/excel_diccionario_datos_senae_importacion_simplificado.xlsx")
diccionario_importaciones

"""#Tipo de datos"""

data_export.dtypes

data_import.dtypes

"""#Estadísticas descriptivas

Número de observaciones y missing values:
"""

data_export.shape[0]

data_import.shape[0]

data_export.isnull().sum()

data_import.isnull().sum()

"""Estadísticas de variables no categóricas:"""

data_export[["CANTIDAD_UNIDAD_FISICA","CANTIDAD_UNIDAD_COMERCIAL",  'PESO_NETO', 'FOB']].describe(include="all")

indice_export_fob_max = data_export['FOB'].idxmax()
print(data_export.iloc[indice_export_fob_max])

data_import[["PESO_NETO",  'FOB', 'FLETE', 'SEGURO', 'CIF', 'CANTIDAD_FISICA', 'SALVAGUARDIA', 'CIF', 'SALVAGUARDIA_ESPECIFICA', 'FODINFA', 'CIF', 'ICE_ADVALOREM', 'ICE_ESPECIFICO', 'IVA', 'ADVALOREM', 'ADVALOREM_ESPECIFICO']].describe(include="all")

indice_import_iva_max = data_import['IVA'].idxmax()
print(data_import.iloc[indice_import_iva_max])

"""Estadísticas para variables categóricas:"""

frecuencia_absoluta_export_distrito = data_export["DISTRITO"].value_counts()
frecuencia_absoluta_export_distrito

frecuencia_absoluta_export_pais = data_export["PAIS_DESTINO"].value_counts()
frecuencia_absoluta_export_pais

frecuencia_absoluta_export_descripcion = data_export["DESCRIPCION_ARANCELARIA"].value_counts()
frecuencia_absoluta_export_descripcion

frecuencia_absoluta_import_distrito = data_import["DISTRITO"].value_counts()
frecuencia_absoluta_import_distrito

frecuencia_absoluta_import_descripcion = data_import["DESCRIPCION_ARANCELARIA"].value_counts()
frecuencia_absoluta_import_descripcion

frecuencia_absoluta_import_pais = data_import["PAIS_ORIGEN"].value_counts()
frecuencia_absoluta_import_pais

import matplotlib.pyplot as plt

!pip install seaborn
import seaborn as sns

"""EXPORTACIONES"""

PAIS_DESTINO = data_export['PAIS_DESTINO']

conteo_destino = data_export['PAIS_DESTINO'].value_counts()

top_destinos = conteo_destino.head(10)

plt.figure(figsize=(10, 6))
top_destinos.plot(kind='bar', color=colores)
plt.xlabel('País de destino')
plt.ylabel('Frecuencia')
plt.title('Top 10 Países de Destino de Exportación')

colores = sns.color_palette('viridis', len(top_destinos))

plt.tight_layout()
plt.show()

import matplotlib.pyplot as plt

CANTIDAD_UNIDAD_FISICA = data_export['CANTIDAD_UNIDAD_FISICA']
PESO_NETO = data_export['PESO_NETO']

sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))
sns.scatterplot(data=data_export, x='CANTIDAD_UNIDAD_FISICA', y='PESO_NETO', palette='viridis')
plt.xlabel('Cantidad de Unidades Físicas', fontsize=12, color='black')
plt.ylabel('Peso Neto', fontsize=12, color='black')
plt.title('Cantidad vs Peso Neto de las Unidades Físicas', fontsize=14, color='black')
plt.tight_layout()
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt

FEC_INGRESO = data_export['FEC_INGRESO']
data_export['FEC_INGRESO'] = pd.to_datetime(data_export['FEC_INGRESO'])
data_export['MES_INGRESO'] = data_export['FEC_INGRESO'].dt.month

sns.set(style="whitegrid")
sns.set_palette("tab10")
plt.figure(figsize=(10, 6))
sns.histplot(data=data_export, x='FEC_INGRESO', kde=True, color='purple')
plt.axhline(0, color='black', linewidth=0.5)
plt.xlabel('Fecha de Ingreso', fontsize=12, color='black')
plt.ylabel('Frecuencia', fontsize=12, color='black')
plt.title('Distribución de Exportaciones en el 2023', fontsize=14, color='black')

IMPORTACIONES

import plotly.express as px

PAIS_ORIGEN = data_import['PAIS_ORIGEN']
ICE_ADVALOREM = data_import['ICE_ADVALOREM']

df_importaciones = data_import.groupby('PAIS_ORIGEN')['ICE_ADVALOREM'].sum().reset_index()
df_importaciones = df_importaciones.nlargest(5, 'ICE_ADVALOREM')

df_importaciones = data_import.groupby('PAIS_ORIGEN')['ICE_ADVALOREM'].sum().reset_index()
df_importaciones = df_importaciones.nlargest(5, 'ICE_ADVALOREM')

colores = ['red', 'orange', 'yellow', 'green', 'blue']

plt.figure(figsize=(10, 6))
plt.scatter(df_importaciones['PAIS_ORIGEN'], df_importaciones['ICE_ADVALOREM'], s=df_importaciones['ICE_ADVALOREM'] * 5, c=df_importaciones['ICE_ADVALOREM'], alpha=0.7)
plt.xlabel('País de Origen')
plt.ylabel('ICE Ad Valorem')
plt.title('ICE Ad Valorem por País de Origen')
plt.grid(True)
plt.tight_layout()
plt.show()

import matplotlib.pyplot as plt

DESCRIPCION_ARANCELARIA = data_import['DESCRIPCION_ARANCELARIA']
IVA = data_import['IVA']

plt.figure(figsize=(10, 6))
plt.bar(data_import['DESCRIPCION_ARANCELARIA'][:10], data_import['IVA'][:10], color='skyblue')
plt.xlabel('Descripción Arancelaria', fontsize=12)
plt.ylabel('IVA', fontsize=12)
plt.title('Relación entre Descripción Arancelaria y IVA (Primeros 10 elementos)', fontsize=14)
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

frecuencia_absoluta_import_distrito = data_import["DISTRITO"].value_counts()
plt.figure(figsize=(10, 6))
frecuencia_absoluta_import_distrito.plot(kind='bar', color='skyblue')
plt.xlabel('Distrito', fontsize=12)
plt.ylabel('Frecuencia Absoluta', fontsize=12)
plt.title('Frecuencia Absoluta por Distrito', fontsize=14)
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()